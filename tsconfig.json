{
  "compilerOptions": {
    /* 基本选项 */
    "target": "esnext",
    "module": "esnext",
    "useDefineForClassFields": true,
    "noLib": false,
    "forceConsistentCasingInFileNames": true,
    "allowSyntheticDefaultImports": true,
    "jsx": "react-jsx",
    "baseUrl": ".",
    "allowJs": true,
    "checkJs": false,
    "sourceMap": true,
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "lib": [
      "dom",
      "esnext"
    ],
    "removeComments": true, // 删除编译后的所有的注释
    "noEmit": true, // 不生成输出文件
    /** 严格检查*/
    "strict": true, // 启用所有严格类型检查选项
    "noImplicitAny": false, // 在表达式和声明上有隐含的 any类型时报错
    "strictNullChecks": true, // 启用严格的 null 检查
    "skipLibCheck": true, //跳过库检查
    "strictFunctionTypes": false, //禁用函数参数双向协变检查。
    "noImplicitThis": true, // 当 this 表达式值为 any 类型的时候，生成一个错误
    "alwaysStrict": true, // 以严格模式检查每个模块，并在每个文件里加入 'use strict'
    "strictPropertyInitialization": false, //声明非严格检查，则类成员可以不通过构造函数赋值；通过（class-transformer）进行转换
    // "noStrictGenericChecks": true, //禁用在函数类型里对泛型签名进行严格检查。
    /* 新的特性支持 */
    "noImplicitOverride": true, //如果要重新父类方法，必须使用override关键字
    "experimentalDecorators": true, // 启用装饰器
    "emitDecoratorMetadata": true, // 为装饰器提供元数据的支持
    // "suppressExcessPropertyErrors": true, //阻止对对象字面量的额外属性检查。
    /* 额外的检查 */
    "noUnusedLocals": false, // 有未使用的变量时，抛出错误
    "noUnusedParameters": false, // 有未使用的参数时，抛出错误
    "noImplicitReturns": true, // 并不是所有函数里的代码都有返回值时，抛出错误
    "noFallthroughCasesInSwitch": true, // 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）
    /** 辅助编程*/
    "noErrorTruncation": false, //是否截断错误
    "pretty": true,
    /* 模块解析选项 */
    "moduleResolution": "node",
    "types": [
      "node",
      // "vite/client",
      // "./typings"
    ],
    "paths": {
      "@/*": [
        "./src/*"
      ]
    }
  },
  "include": [
    "src"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}